- name: Stop proxy if running
  shell: fuser -k {{ cors_anywhere_port }}/cors-anywhere
  ignore_errors: yes
  become: true

- name: Remove proxy
  file:
    path: "{{ repo_dest }}/cors-anywhere"
    state: absent

- name: Clone proxy repository
  git:
    repo: git@github.com:Rob--W/cors-anywhere.git
    dest: "{{ repo_dest }}/cors-anywhere"
    clone: yes
    key_file: "{{ key_file }}"
    accept_hostkey: yes

- name: Install node modules for proxy
  shell: >
    ln -sf {{ repo_dest }}/.nvm/versions/node/v10.15.3/bin/node /usr/bin/node &&
    sudo {{ repo_dest }}/.nvm/versions/node/v10.15.3/bin/npm install
  args:
    chdir: "{{ repo_dest }}/cors-anywhere"
  ignore_errors: yes
  become: true

- name: "Start proxy at port {{ cors_anywhere_port }}"
  shell: >
    nohup {{ repo_dest }}/.nvm/versions/node/v10.15.3/bin/npm start &
  args:
    chdir: "{{ repo_dest }}/cors-anywhere"
  register: status
  async: 10
  poll: 0
  become: true

- name: Stop seqr-ui if running
  shell: fuser -k {{ seqr_ui_port }}/tcp
  ignore_errors: yes
  become: true

- name: Stop seqr if running
  shell: fuser -k {{ seqr_port }}/tcp
  ignore_errors: yes
  become: true

- name: Remove repository athegaul/seqr
  file:
    path: "{{ repo_dest }}/seqr"
    state: absent

- name: Clone repository athegaul/seqr
  git:
    repo: git@github.com:athegaul/seqr.git
    dest: "{{ repo_dest }}/seqr"
    clone: yes
    key_file: "{{ key_file }}"
    accept_hostkey: yes
    version: feature/generate-reporting-word

- name: Install node modules for seqr ui
  shell: >
    ln -sf {{ repo_dest }}/.nvm/versions/node/v10.15.3/bin/node /usr/bin/node &&
    sudo {{ repo_dest }}/.nvm/versions/node/v10.15.3/bin/npm install
  args:
    chdir: "{{ repo_dest }}/seqr/ui"
  ignore_errors: yes
  become: true

- name: Build seqr ui
  shell: >
    ln -sf {{ repo_dest }}/.nvm/versions/node/v10.15.3/bin/node /usr/bin/node &&
    sudo {{ repo_dest }}/.nvm/versions/node/v10.15.3/bin/npm run build
  args:
    chdir: "{{ repo_dest }}/seqr/ui"
  ignore_errors: yes
  become: true

- name: Install psycopg2 for Python3
  apt:
    name: python3-psycopg2
    state: latest
    update_cache: yes

- name: Install requirements.txt
  command:
    chdir: "{{ repo_dest }}/seqr"
    cmd: pip3 install -r requirements.txt
  become: false

- name: Install requirements-dev.txt
  command:
    chdir: "{{ repo_dest }}/seqr"
    cmd: pip3 install -r requirements-dev.txt
  become: false

- name: Add POSTGRES_USERNAME variable
  lineinfile:
    dest: "{{ repo_dest }}/.bashrc"
    line: "export POSTGRES_USERNAME={{ postgres_username }}"
    insertafter: "EOF"
    state: present

- name: Add POSTGRES_PASSWORD variable
  lineinfile:
    dest: "{{ repo_dest }}/.bashrc"
    line: "export POSTGRES_PASSWORD={{ postgres_password }}"
    insertafter: "EOF"
    state: present

- name: Add AWS_ACCESS_KEY_ID variable
  lineinfile:
    dest: "{{ repo_dest }}/.bashrc"
    line: "export AWS_ACCESS_KEY_ID={{ aws_access_key }}"
    insertafter: "EOF"
    state: present

- name: Add AWS_SECRET_ACCESS_KEY variable
  lineinfile:
    dest: "{{ repo_dest }}/.bashrc"
    line: "export AWS_SECRET_ACCESS_KEY={{ aws_secret_access }}"
    insertafter: "EOF"
    state: present

- name: Add AWS_DEFAULT_REGION variable
  lineinfile:
    dest: "{{ repo_dest }}/.bashrc"
    line: "export AWS_DEFAULT_REGION={{ aws_default_region }}"
    insertafter: "EOF"
    state: present

- name: Set environment variables into temp file
  shell: env > /opt/.ansible_env_file
  environment:
   - POSTGRES_USERNAME: "{{ postgres_username }}"
   - POSTGRES_PASSWORD: "{{ postgres_password }}"
   - AWS_ACCESS_KEY_ID: "{{ aws_access_key }}"
   - AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access }}"
   - AWS_DEFAULT_REGION: "{{ aws_default_region }}"
  become: true

- name: "Start seqr-ui at port {{ seqr_ui_port }}"
  shell: >
    nohup {{ repo_dest }}/.nvm/versions/node/v10.15.3/bin/npm start &
  args:
    chdir: "{{ repo_dest }}/seqr/ui"
  register: status
  async: 10
  poll: 0
  become: true

- name: "Start seqr server at port {{ seqr_port }}"
  shell: nohup python3 -m manage runserver 0.0.0.0:8000 &
  args:
    chdir: "{{ repo_dest }}/seqr"
  environment:
   - POSTGRES_USERNAME: "{{ postgres_username }}"
   - POSTGRES_PASSWORD: "{{ postgres_password }}"
   - AWS_ACCESS_KEY_ID: "{{ aws_access_key }}"
   - AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access }}"
   - AWS_DEFAULT_REGION: "{{ aws_default_region }}"
  become: false
