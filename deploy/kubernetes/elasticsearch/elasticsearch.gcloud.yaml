apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
  namespace: {{ NAMESPACE }}
  labels:
    name: elasticsearch
    deployment: {{ DEPLOY_TO }}
spec:
  version: {{ ELASTICSEARCH_VERSION }}
  image: {{ DOCKER_IMAGE_PREFIX }}/elasticsearch{{ DOCKER_IMAGE_TAG }}
  auth:
    roles:
      - secretName: elasticsearch-secrets
    fileRealm:
      - secretName: elasticsearch-secrets
  http:
    tls:
      selfSignedCertificate:
        disabled: true
  nodeSets:
  - name: master
    count: {{ ES_MASTER_NUM_PODS }}
    config:
      node.master: true
      node.data: false
      node.ingest: false
      node.ml: false
      node.remote_cluster_client: false
    podTemplate:
      metadata:
        labels:
          name: elasticsearch
          deployment: {{ DEPLOY_TO }}
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: nodeType
                  operator: NotIn
                  values:
                  - data
        initContainers:
          - name: sysctl
            securityContext:
              privileged: true
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        containers:
        - name: elasticsearch
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
  - name: client
    count: {{ ES_CLIENT_NUM_PODS }}
    config:
      node.master: false
      node.data: false
      node.ingest: false
      node.ml: false
      node.remote_cluster_client: false
    podTemplate:
      metadata:
        labels:
          name: elasticsearch
          deployment: {{ DEPLOY_TO }}
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: nodeType
                  operator: NotIn
                  values:
                  - data
        initContainers:
          - name: sysctl
            securityContext:
              privileged: true
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        containers:
        - name: elasticsearch
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
  - name: data
    count:  {{ ES_DATA_NUM_PODS }}
    config:
      node.master: false
      node.data: true
      node.ingest: false
      node.ml: false
      node.remote_cluster_client: false
      cluster.routing.allocation.disk.watermark.low: '90%'
    podTemplate:
      metadata:
        labels:
          name: elasticsearch
          deployment: {{ DEPLOY_TO }}
      spec:
      {% if ES_DATA_NUM_PODS > 1 %}
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: nodeType
                  operator: In
                  values:
                  - data
      {% endif %}
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        containers:
        - name: elasticsearch
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
          - name: ES_JAVA_OPTS
            value: "-Xms{{ ELASTICSEARCH_JVM_MEMORY }} -Xmx{{ ELASTICSEARCH_JVM_MEMORY }}"
          resources:
            requests:
              memory: {{ ELASTICSEARCH_CONTAINER_MEMORY }}
            limits:
              memory: {{ ELASTICSEARCH_CONTAINER_MEMORY }}
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ ES_DATA_DISK_TYPE }}-storage-class
        resources:
          requests:
            storage: {{ ES_DATA_DISK_SIZE }}
{% if ES_LOADING_NUM_PODS > 0 %}
  - name: data-loading
    count: {{ ES_LOADING_NUM_PODS }}
    config:
      node.master: false
      node.data: true
      node.ingest: true
      node.ml: false
      node.remote_cluster_client: false
    podTemplate:
      metadata:
        labels:
          name: elasticsearch
          deployment: {{ DEPLOY_TO }}
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: nodeType
                  operator: NotIn
                  values:
                  - data
        initContainers:
          - name: sysctl
            securityContext:
              privileged: true
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        containers:
        - name: elasticsearch
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
        volumes:
        - name: elasticsearch-data
          emptyDir: {}
{% endif %}
